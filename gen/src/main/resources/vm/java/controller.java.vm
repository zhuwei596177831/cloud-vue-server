package ${packageName}.controller;

import java.util.List;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.entity.${ClassName};
import ${packageName}.service.${ClassName}Service;
import com.example.shiroAuthencation.controller.BaseController;
import com.example.core.entity.Json;
import com.github.xiaoymin.knife4j.annotations.ApiSupport;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * @author ${author}
 * @date ${datetime}
 * @description ${functionName}Controller
 */
@Api(tags = "${functionName}")
@ApiSupport(author = "${author}")
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {


    private final  ${ClassName}Service ${className}Service;

    public ${ClassName}Controller(${ClassName}Service ${className}Service) {
        this.${className}Service = ${className}Service;
    }

    /**
     * 分页列表数据
     *
     * @param ${className}: 参数
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "分页列表数据")
    @PostMapping("/page")
    public Json page(${ClassName} ${className}) {
        List<${ClassName}> page = ${className}Service.list(${className}, getPageInfo());
        return Json.ok(page);
    }

    /**
     * 列表数据
     *
     * @param ${className}: 参数
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "列表数据")
    @PostMapping("/list")
    public Json list(${ClassName} ${className}) {
        List<${ClassName}> list = ${className}Service.list(${className}, null);
        return Json.ok(list);
    }

    /**
     * 根据主键id查询
     *
     * @param ${pkColumn.javaField}: 主键id
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "根据主键id查询")
    @PostMapping(value = "/selectById/{${pkColumn.javaField}}")
    public Json selectById(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return Json.ok(${className}Service.selectById(${pkColumn.javaField}));
    }

    /**
     * 新增
     *
     * @param ${className}: 参数
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "新增")
    @PostMapping("/insert")
    public Json insert(@RequestBody ${ClassName} ${className}) {
        return ${className}Service.insert(${className});
    }

    /**
     * 根据id修改
     *
     * @param ${className}: 参数
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "根据id修改")
    @PostMapping("/updateById")
    public Json updateById(@RequestBody ${ClassName} ${className}) {
        return ${className}Service.updateById(${className});
    }

    /**
     * 根据id删除
     *
     * @param ${pkColumn.javaField}: 主键id
     * @author: ${author}
     * @date: ${datetime}
     */
    @ApiOperation(value = "根据id删除")
    @PostMapping("/deleteById/{${pkColumn.javaField}}")
    public Json deleteById(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return ${className}Service.deleteById(${pkColumn.javaField});
    }

    /**
     * 根据主键id数组批量删除
     *
     * @param ${pkColumn.javaField}s: 主键数组
     * @author: ${author}
     * @date: ${datetime}
     **/
    @ApiOperation(value = "根据主键id数组批量删除")
    @PostMapping("/deleteByIds/{${pkColumn.javaField}s}")
    public Json deleteByIds(@PathVariable("${pkColumn.javaField}s") ${pkColumn.javaType}[] ${pkColumn.javaField}s) {
        return ${className}Service.deleteByIds(${pkColumn.javaField}s);
    }
}
